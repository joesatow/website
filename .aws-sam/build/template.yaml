AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: mktanon site
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
Resources:
  RobinReaderCsvUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: robin-csv-upload
      CorsConfiguration:
        CorsRules:
        - AllowedOrigins:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          AllowedHeaders:
          - '*'
  RobinReaderFinishedXlsxBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: robin-finished-xlsx
      CorsConfiguration:
        CorsRules:
        - AllowedOrigins:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          AllowedHeaders:
          - '*'
  MktAnonSiteFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: S3UploadAndGetAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::robin-csv-upload/*
          - Effect: Allow
            Action: s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::robin-csv-upload/*
          - Effect: Allow
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::robin-finished-xlsx/*
          - Effect: Allow
            Action: s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::robin-finished-xlsx/*
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  CsvUploadApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
        - '*'
        AllowMethods:
        - POST
        AllowHeaders:
        - '*'
  CreateXlsxApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
        - '*'
        AllowMethods:
        - POST
        AllowHeaders:
        - '*'
  UploadCsvFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UploadCsvFunction
      Handler: uploadCsvFunction.lambda_handler
      Runtime: python3.10
      Environment:
        Variables:
          CSV_BUCKET: robin-csv-upload
          XLSX_BUCKET: robin-finished-xlsx
      Role:
        Fn::GetAtt:
        - MktAnonSiteFunctionRole
        - Arn
      Events:
        UploadCsvApiCalled:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: CsvUploadApi
            Path: /upload
            Method: post
    Metadata:
      SamResourceId: UploadCsvFunction
  CreateXlsxFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateXlsxFunction
      Handler: createXlsx.lambda_handler
      Runtime: python3.10
      Layers:
      - arn:aws:lambda:us-east-2:770693421928:layer:Klayers-p310-pandas:13
      Environment:
        Variables:
          BUCKET_NAME: jsat-robin-reader-csv-upload
      Role:
        Fn::GetAtt:
        - MktAnonSiteFunctionRole
        - Arn
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: RobinReaderCsvUploadBucket
      Events:
        CreateXlsxApiCalled:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: CreateXlsxApi
            Path: /create
            Method: post
    Metadata:
      SamResourceId: CreateXlsxFunction
Outputs:
  UploadCsvApiEndpoint:
    Description: API endpoint URL for uploading CSV
    Value:
      Fn::Sub: https://${CsvUploadApi}.execute-api.${AWS::Region}.amazonaws.com/upload
  CreateXlsxApiEndpoint:
    Description: Endpoint URL for creating XLSX
    Value:
      Fn::Sub: https://${CreateXlsxApi}.execute-api.${AWS::Region}.amazonaws.com/create
