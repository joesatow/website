AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'mktanon site'

Globals:
  Function:
    Timeout: 10
    MemorySize: 128

Resources:
  RobinReaderUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: jsat-robin-reader-upload
      AccessControl: Private
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"
            AllowedMethods:
              - "PUT"
              - "POST"
              - "GET"
            AllowedHeaders:
              - "*"

  MktAnonSiteFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3UploadAndGetAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub arn:aws:s3:::mkt-anon-site/*
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:aws:s3:::mkt-anon-site/*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: robinReader/package/
      Handler: app.lambda_handler
      Role: !GetAtt MktAnonSiteFunctionRole.Arn
      Runtime: python3.10
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:us-east-2:770693421928:layer:Klayers-p310-pandas:13
      Events:
        ApiCall:
          Type: HttpApi 
          Properties:
            Path: /upload
            Method: post
          CorsConfiguration:
            AllowOrigins:
              - "*"
            AllowMethods:
              - POST
              - OPTIONS
            AllowHeaders:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token

Outputs:
  UploadApi:
    Description: "Endpoint for api"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/stamp/upload"            
