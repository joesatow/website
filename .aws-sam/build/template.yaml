AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: mktanon site
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
Resources:
  RobinReaderCsvUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: jsat-robin-reader-csv-upload
  MktAnonSiteFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: S3UploadAndGetAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::jsat-robin-reader-csv-upload/*
          - Effect: Allow
            Action: s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::jsat-robin-reader-csv-upload/*
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UploadFunction
      Handler: uploadCsvFunction.lambda_handler
      Runtime: python3.10
      Environment:
        Variables:
          BUCKET_NAME: jsat-robin-reader-csv-upload
      Role:
        Fn::GetAtt:
        - MktAnonSiteFunctionRole
        - Arn
      Policies:
      - S3CrudPolicy:
          BucketName:
            Ref: RobinReaderCsvUploadBucket
      Events:
        UploadCsvApi:
          Type: HttpApi
          Properties:
            Path: /upload
            Method: post
    Metadata:
      SamResourceId: UploadFunction
Outputs:
  UploadApi:
    Description: Endpoint for api
    Value:
      Fn::Sub: https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/upload
